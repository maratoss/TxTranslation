<Window
	x:Class="Unclassified.TxEditor.Views.MainWindow"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:c="clr-namespace:Unclassified.TxEditor.Converters"
	xmlns:Controls="clr-namespace:System.Windows.Controls;assembly=MultiSelectTreeView"
	xmlns:Tx="http://unclassified.software/source/txtranslation"
	xmlns:ui="clr-namespace:Unclassified.UI"
	xmlns:v="clr-namespace:Unclassified.TxEditor.Views"
	xmlns:vm="clr-namespace:Unclassified.TxEditor.ViewModels"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	TextOptions.TextFormattingMode="Display"
	Title="{Binding DisplayName}"
	Height="296" Width="1304" UseLayoutRounding="True"
	Icon="/Images/TxFlag.ico"
	AllowDrop="True" Drop="Window_Drop"
	Loaded="Window_Loaded" Closing="Window_Closing"
	PreviewKeyDown="Window_PreviewKeyDown"
	x:Name="_this">

	<Window.Resources>
		<ui:TextHighlightConverter x:Key="textHighlightConverter"/>
		<c:TreeNodesConverter x:Key="treeNodesConverter"/>
		<c:UnicodeInfoConverter x:Key="unicodeInfoConverter"/>
		<ui:BoolToVisibilityConverter x:Key="boolVisConverter"/>
		<c:CharacterMapConverter x:Key="characterMapConverter"/>
		<c:MonospaceFontConverter x:Key="monospaceFontConverter"/>
		<c:DoubleGridLengthConverter x:Key="doubleGridLengthConverter"/>
	</Window.Resources>
	<Window.InputBindings>
		<KeyBinding Key="D" Modifiers="Control" Command="{Binding DuplicateTextKeyCommand}"/>
		<KeyBinding Key="N" Modifiers="Control" Command="{Binding NewTextKeyCommand}"/>
		<KeyBinding Key="O" Modifiers="Control" Command="{Binding LoadFileCommand}"/>
<!--		<KeyBinding Key="O" Modifiers="Control+Shift" Command="{Binding LoadFolderCommand}"/>-->
		<KeyBinding Key="S" Modifiers="Control" Command="{Binding SaveCommand}"/>
		<KeyBinding Key="F12" Command="{Binding GotoDefinitionCommand}"/>
		<KeyBinding Key="Left" Modifiers="Alt" Command="{Binding NavigateBackCommand}"/>
		<KeyBinding Key="Right" Modifiers="Alt" Command="{Binding NavigateForwardCommand}"/>
		<KeyBinding Key="Up" Modifiers="Alt" Command="{Binding SelectPreviousTextKeyCommand}"/>
		<KeyBinding Key="Down" Modifiers="Alt" Command="{Binding SelectNextTextKeyCommand}"/>
	</Window.InputBindings>

	<DockPanel>
		<!-- region ToolGrid -->
		<Grid Name="ToolGrid" DockPanel.Dock="Top">
			<Grid Name="InnerToolGrid" Style="{StaticResource ToolGridStyle}" LayoutUpdated="InnerToolGrid_LayoutUpdated">
				<Grid.RowDefinitions>
					<RowDefinition Height="3"/>
					<RowDefinition Height="Auto"/>
					<RowDefinition Height="Auto"/>
					<RowDefinition Height="Auto"/>
					<RowDefinition Height="3"/>
					<RowDefinition Height="3"/>
				</Grid.RowDefinitions>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="3"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="*"/>
				</Grid.ColumnDefinitions>

				<Rectangle Grid.Row="5" Grid.ColumnSpan="16" Fill="{StaticResource ToolGridShadowBrush}"/>

				<StackPanel Grid.Row="1" Grid.Column="1" Orientation="Horizontal">
					<ui:IconButton
						Command="{Binding LoadFileCommand}"
						Content="{Tx:T 'toolbar.file.load file', Default='Load file'}" IconSource="/Images/document_open.png"
						HotkeyText="{Tx:T 'toolbar.file.load file.hotkey'}" ExtendedToolTipText="{Tx:T 'toolbar.file.load file.tooltip'}"
						ToolTipService.ShowOnDisabled="True"
						Style="{StaticResource ToolButtonStyle}" Focusable="False" CollapsePriority="82"/>
					<ui:IconButton
                        Visibility="Collapsed"
						Command="{Binding LoadFolderCommand}"
						Content="{Tx:T 'toolbar.file.load folder', Default='Load folder'}" IconSource="/Images/folder_open.png"
						HotkeyText="{Tx:T 'toolbar.file.load folder.hotkey'}" ExtendedToolTipText="{Tx:T 'toolbar.file.load folder.tooltip'}"
						ToolTipService.ShowOnDisabled="True"
						Style="{StaticResource ToolButtonStyle}" Focusable="False" CollapsePriority="83"/>
					<ui:IconButton
						Command="{Binding SaveCommand}"
						Content="{Tx:T 'toolbar.file.save', Default='Save'}" IconSource="/Images/save.png"
						HotkeyText="{Tx:T 'toolbar.file.save.hotkey'}" ExtendedToolTipText="{Tx:T 'toolbar.file.save.tooltip'}"
						ToolTipService.ShowOnDisabled="True"
						Style="{StaticResource ToolButtonStyle}" Focusable="False" CollapsePriority="80"/>
				</StackPanel>
				<StackPanel Grid.Row="2" Grid.Column="1" Margin="0,1,0,0" Orientation="Horizontal">
					<ui:IconButton
						Command="{Binding NewFileCommand}"
						Content="{Tx:T 'toolbar.file.new', Default='New'}" IconSource="/Images/document_create.png"
						ExtendedToolTipText="{Tx:T 'toolbar.file.new.tooltip'}"
						ToolTipService.ShowOnDisabled="True"
						Style="{StaticResource ToolButtonStyle}" Focusable="False" CollapsePriority="82"/>
					<ui:IconButton
                        Visibility="Collapsed"
						Command="{Binding ImportFileCommand}"
						Content="{Tx:T 'toolbar.file.import', Default='Import'}" IconSource="/Images/import.png"
						ExtendedToolTipText="{Tx:T 'toolbar.file.import.tooltip'}"
						ToolTipService.ShowOnDisabled="True"
						Style="{StaticResource ToolButtonStyle}" Focusable="False" CollapsePriority="85"/>
					<ui:IconButton
                        Visibility="Collapsed"
						Command="{Binding ExportKeysCommand}"
						Content="{Tx:T 'toolbar.file.export', Default='Export'}" IconSource="/Images/key_export.png"
						ExtendedToolTipText="{Tx:T 'toolbar.file.export.tooltip'}"
						ToolTipService.ShowOnDisabled="True"
						Style="{StaticResource ToolButtonStyle}" Focusable="False" CollapsePriority="85"/>
				</StackPanel>
				<TextBlock
					Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="1" HorizontalAlignment="Center"
					Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Margin="0,4,0,0"
					Text="{Tx:T 'toolbar.file', Default='File'}"/>

				<ContentControl Grid.Row="0" Grid.Column="2" Grid.RowSpan="5" Template="{StaticResource ToolGridLargeSeparator}" Focusable="False"/>

                <StackPanel Grid.Row="1" Grid.Column="3" Grid.RowSpan="2">
                    <ui:IconButton
			            Margin="0,0,3,0"
			            Command="{Binding Path=UploadFlagCommand}"
			            Content="upload flag" IconSource="/Images/globe_create_22.png"
			            Orientation="Vertical"
			            ToolTipService.ShowOnDisabled="True"
			            Style="{StaticResource ToolButtonStyle}" Focusable="False" />
                    <ui:IconButton
			            Margin="0,0,3,0"
			            Command="{Binding NewCultureCommand}"
			            Content="{Tx:T 'toolbar.culture.new', Default='New culture'}" IconSource="/Images/globe_create_22.png"
			            Orientation="Vertical"
			            ExtendedToolTipText="{Tx:T 'toolbar.culture.new.tooltip'}"
			            ToolTipService.ShowOnDisabled="True"
			            Style="{StaticResource ToolButtonStyle}" Focusable="False" />
                </StackPanel>
				<StackPanel Grid.Row="1" Grid.Column="4" Orientation="Horizontal">
					<ui:IconButton
						Command="{Binding DeleteCultureCommand}"
						Content="{Tx:T 'toolbar.culture.delete', Default='Del'}" IconSource="/Images/globe_delete.png"
						ExtendedToolTipText="{Tx:T 'toolbar.culture.delete.tooltip'}"
						ToolTipService.ShowOnDisabled="True"
						Style="{StaticResource ToolButtonStyle}" Focusable="False" CollapsePriority="70"/>
					<!-- I18N -->
					<ui:IconToggleButton
                        Visibility="Collapsed"
						x:Name="CultureToolsButton"
						Content="Tools▾" IconSource="/Images/globe_config.png"
						ToolTipService.ShowOnDisabled="True"
						Style="{StaticResource ToolToggleButtonStyle}" Focusable="False" CollapsePriority="70"
						ContextMenuService.IsEnabled="False" ShowMenu="True">
						<ui:IconToggleButton.ContextMenu>
							<ContextMenu>
								<MenuItem Header="{Tx:T 'toolbar.culture.replace', Default='Replace culture'}" Command="{Binding ReplaceCultureCommand}">
									<MenuItem.Icon>
										<Image Source="/Images/globe_change.png"/>
									</MenuItem.Icon>
								</MenuItem>
								<MenuItem Header="{Tx:T 'toolbar.culture.insert system keys', Default='Insert system keys'}" Command="{Binding InsertSystemKeysCommand}">
									<MenuItem.Icon>
										<Image Source="/Images/Tx_16.png"/>
									</MenuItem.Icon>
								</MenuItem>
								<MenuItem Header="{Tx:T 'toolbar.culture.view date and time formats', Default='View date and time formats'}" Command="{Binding ViewDateTimeFormatsCommand}">
									<MenuItem.Icon>
										<Image Source="/Images/globe_time.png"/>
									</MenuItem.Icon>
								</MenuItem>
							</ContextMenu>
						</ui:IconToggleButton.ContextMenu>
					</ui:IconToggleButton>
				</StackPanel>
				<StackPanel Grid.Row="2" Grid.Column="4" Margin="0,1,0,0" Orientation="Horizontal">
					<ui:IconButton
                        Visibility="Collapsed"
						Command="{Binding SetPrimaryCultureCommand}"
						Content="{Tx:T 'toolbar.culture.set primary', Default='Set primary'}" IconSource="/Images/globe_check_small.png"
						ExtendedToolTipText="{Tx:T 'toolbar.culture.set primary.tooltip'}"
						ToolTipService.ShowOnDisabled="True"
						Style="{StaticResource ToolButtonStyle}" Focusable="False" CollapsePriority="70"/>
				</StackPanel>
				<TextBlock
					Grid.Row="3" Grid.Column="3" Grid.ColumnSpan="2" HorizontalAlignment="Center"
					Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Margin="0,4,0,0"
					Text="{Tx:T 'toolbar.culture', Default='Culture'}"/>

				<ContentControl Grid.Row="0" Grid.Column="5" Grid.RowSpan="5" Template="{StaticResource ToolGridLargeSeparator}" Focusable="False"/>

				<ui:IconButton
					Grid.Row="1" Grid.Column="6" Grid.RowSpan="2" Margin="0,0,3,0"
					Command="{Binding NewTextKeyCommand}"
					Content="{Tx:T 'toolbar.text key.new', Default='New key'}" IconSource="/Images/key_create_22.png" Orientation="Vertical"
					HotkeyText="{Tx:T 'toolbar.text key.new.hotkey'}" ExtendedToolTipText="{Tx:T 'toolbar.text key.new.tooltip'}"
					ToolTipService.ShowOnDisabled="True"
					Style="{StaticResource ToolButtonStyle}" Focusable="False"/>
				<StackPanel Grid.Row="1" Grid.Column="7" Orientation="Horizontal">
					<ui:IconButton
						Command="{Binding DeleteTextKeyCommand}"
						Content="{Tx:T 'toolbar.text key.delete', Default='Del'}" IconSource="/Images/key_delete.png"
						ExtendedToolTipText="{Tx:T 'toolbar.text key.delete.tooltip'}"
						ToolTipService.ShowOnDisabled="True"
						Style="{StaticResource ToolButtonStyle}" Focusable="False" CollapsePriority="60"/>
					<ui:IconButton
                        Visibility="Collapsed"
						Command="{Binding TextKeyWizardCommand}"
						Content="{Tx:T 'toolbar.text key.wizard', Default='Wiz'}" IconSource="/Images/wizard.png"
						ExtendedToolTipText="{Tx:T 'toolbar.text key.wizard.tooltip'}"
						ToolTipService.ShowOnDisabled="True"
						Style="{StaticResource ToolButtonStyle}" Focusable="False" CollapsePriority="60"/>
				</StackPanel>
				<StackPanel Grid.Row="2" Grid.Column="7" Margin="0,1,0,0" Orientation="Horizontal">
					<ui:IconButton
						Command="{Binding RenameTextKeyCommand}"
						Content="{Tx:T 'toolbar.text key.rename', Default='Ren'}" IconSource="/Images/rename.png"
						ExtendedToolTipText="{Tx:T 'toolbar.text key.rename.tooltip'}"
						ToolTipService.ShowOnDisabled="True"
						Style="{StaticResource ToolButtonStyle}" Focusable="False" CollapsePriority="60"/>
					<ui:IconButton
						Command="{Binding DuplicateTextKeyCommand}"
						Content="{Tx:T 'toolbar.text key.duplicate', Default='Dupl'}" IconSource="/Images/key_duplicate.png"
						HotkeyText="{Tx:T 'toolbar.text key.duplicate.hotkey'}" ExtendedToolTipText="{Tx:T 'toolbar.text key.duplicate.tooltip'}"
						ToolTipService.ShowOnDisabled="True"
						Style="{StaticResource ToolButtonStyle}" Focusable="False" CollapsePriority="60"/>
				</StackPanel>
				<TextBlock
					Grid.Row="3" Grid.Column="6" Grid.ColumnSpan="2" HorizontalAlignment="Center"
					Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Margin="0,4,0,0"
					Text="{Tx:T 'toolbar.text key', Default='Text key'}"/>

				<ContentControl Grid.Row="0" Grid.Column="8" Grid.RowSpan="5" Template="{StaticResource ToolGridLargeSeparator}" Focusable="False"/>

				<StackPanel Grid.Row="1" Grid.Column="9" Orientation="Horizontal" Visibility="Collapsed">
					<ui:IconButton
						Command="{Binding NavigateBackCommand}"
						Content="{Tx:T 'toolbar.view.back', Default='Back'}" IconSource="/Images/back.png"
						HotkeyText="{Tx:T 'toolbar.view.back.hotkey'}" ExtendedToolTipText="{Tx:T 'toolbar.view.back.tooltip'}"
						ToolTipService.ShowOnDisabled="True"
						Style="{StaticResource ToolButtonStyle}" Focusable="False" CollapsePriority="90"/>
					<ui:IconButton
						Command="{Binding NavigateForwardCommand}"
						Content="{Tx:T 'toolbar.view.forward', Default='Fwd'}" IconSource="/Images/forward.png"
						HotkeyText="{Tx:T 'toolbar.view.forward.hotkey'}" ExtendedToolTipText="{Tx:T 'toolbar.view.forward.tooltip'}"
						ToolTipService.ShowOnDisabled="True"
						Style="{StaticResource ToolButtonStyle}" Focusable="False" CollapsePriority="90"/>
					<ui:IconButton
						Command="{Binding GotoDefinitionCommand}"
						Content="{Tx:T 'toolbar.view.definition', Default='Def'}" IconSource="/Images/goto_definition.png"
						HotkeyText="{Tx:T 'toolbar.view.definition.hotkey'}" ExtendedToolTipText="{Tx:T 'toolbar.view.definition.tooltip'}"
						ToolTipService.ShowOnDisabled="True"
						Style="{StaticResource ToolButtonStyle}" Focusable="False" CollapsePriority="90"/>
					<ui:IconToggleButton
						Content="{Tx:T 'toolbar.view.comment', Default='Comment'}"
						ExtendedToolTipText="{Tx:T 'toolbar.view.comment.tooltip'}"
						ToolTipService.ShowOnDisabled="True"
						Focusable="False"
						IsChecked="{Binding Settings.View.ShowComments}" CollapsePriority="90">
						<ui:IconToggleButton.Style>
							<Style TargetType="ToggleButton" BasedOn="{StaticResource ToolToggleButtonStyle}">
								<Setter Property="ui:IconToggleButton.IconSource" Value="/Images/comment.png"/>
								<Style.Triggers>
									<DataTrigger Binding="{Binding HaveComment}" Value="True">
										<Setter Property="ui:IconToggleButton.IconSource" Value="/Images/comment_yellow.png"/>
									</DataTrigger>
									<MultiDataTrigger>
										<MultiDataTrigger.Conditions>
											<Condition Binding="{Binding HaveComment}" Value="True"/>
											<Condition Binding="{Binding Settings.View.ShowComments}" Value="False"/>
											<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="False"/>
										</MultiDataTrigger.Conditions>
										<MultiDataTrigger.Setters>
											<Setter Property="ui:IconToggleButton.Effect">
												<Setter.Value>
													<DropShadowEffect BlurRadius="8" Color="#F0EF1C" Opacity="0.8" ShadowDepth="0"/>
												</Setter.Value>
											</Setter>
										</MultiDataTrigger.Setters>
									</MultiDataTrigger>
								</Style.Triggers>
							</Style>
						</ui:IconToggleButton.Style>
					</ui:IconToggleButton>
				</StackPanel>
				<StackPanel Grid.Row="2" Grid.Column="9" Margin="0,1,0,0" Orientation="Horizontal" Visibility="Collapsed">
					<ui:IconToggleButton
						Content="{Tx:T 'toolbar.view.monospace', Default='Mono'}" IconSource="/Images/monospace.png"
						ExtendedToolTipText="{Tx:T 'toolbar.view.monospace.tooltip'}"
						ToolTipService.ShowOnDisabled="True"
						Style="{StaticResource ToolToggleButtonStyle}" Focusable="False"
						IsChecked="{Binding Settings.View.MonospaceFont}" CollapsePriority="90"/>
					<ui:IconToggleButton
						Content="{Tx:T 'toolbar.view.hidden chars', Default='Hid'}" IconSource="/Images/hidden_chars.png"
						ExtendedToolTipText="{Tx:T 'toolbar.view.hidden chars.tooltip'}"
						ToolTipService.ShowOnDisabled="True"
						Style="{StaticResource ToolToggleButtonStyle}" Focusable="False"
						IsChecked="{Binding Settings.View.ShowHiddenChars}" CollapsePriority="90"/>
					<ui:IconToggleButton
						Content="{Tx:T 'toolbar.view.character map', Default='CharMap'}" IconSource="/Images/charmap.png"
						ExtendedToolTipText="{Tx:T 'toolbar.view.character map.tooltip'}"
						ToolTipService.ShowOnDisabled="True"
						Style="{StaticResource ToolToggleButtonStyle}" Focusable="False"
						IsChecked="{Binding Settings.View.ShowCharacterMap}" CollapsePriority="90"/>
					<ui:IconToggleButton
						Content="{Tx:T 'toolbar.view.suggestions', Default='Sugg'}"
						ExtendedToolTipText="{Tx:T 'toolbar.view.suggestions.tooltip'}"
						ToolTipService.ShowOnDisabled="True"
						Focusable="False"
						IsChecked="{Binding Settings.View.ShowSuggestions}" CollapsePriority="90">
						<ui:IconToggleButton.Style>
							<Style TargetType="ToggleButton" BasedOn="{StaticResource ToolToggleButtonStyle}">
								<Setter Property="ui:IconToggleButton.IconSource" Value="/Images/lightbulb.png"/>
								<Style.Triggers>
									<DataTrigger Binding="{Binding HaveSuggestions}" Value="True">
										<Setter Property="ui:IconToggleButton.IconSource" Value="/Images/lightbulb_green.png"/>
									</DataTrigger>
									<MultiDataTrigger>
										<MultiDataTrigger.Conditions>
											<Condition Binding="{Binding HaveSuggestions}" Value="True"/>
											<Condition Binding="{Binding Settings.View.ShowSuggestions}" Value="False"/>
											<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="False"/>
										</MultiDataTrigger.Conditions>
										<MultiDataTrigger.Setters>
											<Setter Property="ui:IconToggleButton.Effect">
												<Setter.Value>
													<DropShadowEffect BlurRadius="6" Color="#41A717" Opacity="0.6" ShadowDepth="0"/>
												</Setter.Value>
											</Setter>
										</MultiDataTrigger.Setters>
									</MultiDataTrigger>
								</Style.Triggers>
							</Style>
						</ui:IconToggleButton.Style>
					</ui:IconToggleButton>
				</StackPanel>
				<TextBlock Visibility="Collapsed"
					Grid.Row="3" Grid.Column="9" Grid.ColumnSpan="1" HorizontalAlignment="Center"
					Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Margin="0,4,0,0"
					Text="{Tx:T 'toolbar.view', Default='View'}"/>

				<ContentControl Grid.Row="0" Grid.Column="10" Grid.RowSpan="5" Template="{StaticResource ToolGridLargeSeparator}" Focusable="False"/>

				<StackPanel Grid.Row="1" Grid.Column="11" Orientation="Horizontal">
					<TextBlock VerticalAlignment="Center" Margin="3,0,0,0" Text="Search term:"/>
					<Grid Margin="4,0,0,0">
						<TextBox
							Name="SearchText"
							Width="150" Margin="0" Padding="2,2,14,2"
							Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}"
							Style="{StaticResource ToolTextBoxStyle}"
							ui:TextBoxExtensions.DisableInsertKey="True"/>
						<Button
							HorizontalAlignment="Right"
							BorderBrush="{x:Null}" Background="Transparent" Focusable="False"
							Command="{Binding ClearSearchCommand}"
							Foreground="Red"
							Content="×">
							<Button.Style>
								<Style TargetType="Button" BasedOn="{StaticResource ToolButtonStyle}">
									<Setter Property="Visibility" Value="Visible"/>
									<Style.Triggers>
										<DataTrigger Binding="{Binding SearchText}" Value="">
											<Setter Property="Visibility" Value="Hidden"/>
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</Button.Style>
						</Button>
					</Grid>
					<Button Style="{StaticResource ToolButtonStyle}" Padding="0,2" Focusable="False">▾</Button>
				</StackPanel>
				<StackPanel Grid.Row="2" Grid.Column="11" Margin="0,1,0,0" Orientation="Horizontal">
					<ui:IconToggleButton
						Content="{Tx:T 'toolbar.filter.n problems', {Binding ProblemKeys.Count}, Default='0 problems'}"
						ExtendedToolTipText="{Tx:T 'toolbar.filter.n problems.tooltip'}"
						ToolTipService.ShowOnDisabled="True"
						IsChecked="{Binding ProblemFilterActive}"
						Focusable="False">
						<ui:IconToggleButton.Style>
							<Style TargetType="ToggleButton" BasedOn="{StaticResource ToolToggleButtonStyle}">
								<Setter Property="ui:IconToggleButton.IconSource" Value="/Images/error_list_red.png"/>
								<Style.Triggers>
									<DataTrigger Binding="{Binding ProblemKeys.Count}" Value="0">
										<Setter Property="ui:IconToggleButton.IconSource" Value="/Images/error_list.png"/>
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</ui:IconToggleButton.Style>
					</ui:IconToggleButton>
					<!-- I18N -->
					<ui:IconButton
						Content="Cultures" IconSource="/Images/globe_filter.png"
						ExtendedToolTipText="Temporarily hides unused cultures from the editor fields."
						ToolTipService.ShowOnDisabled="True"
						Style="{StaticResource ToolButtonStyle}" Focusable="False"/>
				</StackPanel>
				<TextBlock
					Grid.Row="3" Grid.Column="11" Grid.ColumnSpan="1" HorizontalAlignment="Center"
					Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Margin="0,4,0,0"
					Text="{Tx:T 'toolbar.filter', Default='Filter'}"/>

				<ContentControl Grid.Row="0" Grid.Column="12" Grid.RowSpan="5" Template="{StaticResource ToolGridLargeSeparator}" Focusable="False"/>

                <StackPanel Grid.Row="1" Grid.Column="13" Orientation="Horizontal" Visibility="Collapsed">
					<ui:IconButton
						Command="{Binding SettingsCommand}"
						Content="{Tx:T 'toolbar.app.settings', Default='Settings'}" IconSource="/Images/gear.png"
						ExtendedToolTipText="{Tx:T 'toolbar.app.settings.tooltip'}"
						ToolTipService.ShowOnDisabled="True"
						Style="{StaticResource ToolButtonStyle}" Focusable="False"/>
				</StackPanel>
                <StackPanel Grid.Row="2" Grid.Column="13" Margin="0,1,0,0" Orientation="Horizontal" Visibility="Collapsed">
					<ui:IconButton
						Command="{Binding AboutCommand}"
						Content="{Tx:T 'toolbar.app.about', Default='About'}" IconSource="/Images/info.png"
						ExtendedToolTipText="{Tx:T 'toolbar.app.about.tooltip'}"
						ToolTipService.ShowOnDisabled="True"
						Style="{StaticResource ToolButtonStyle}" Focusable="False" CollapsePriority="100"/>
					<ui:IconButton
                        Visibility="Collapsed"
						Command="{Binding HelpCommand}"
						Content="{Tx:T 'toolbar.app.help', Default='Help'}" IconSource="/Images/help.png"
						ExtendedToolTipText="{Tx:T 'toolbar.app.help.tooltip'}"
						ToolTipService.ShowOnDisabled="True"
						Style="{StaticResource ToolButtonStyle}" Focusable="False" CollapsePriority="100"/>
					<ui:IconButton
                        Visibility="Collapsed"
						Command="{Binding LibFolderCommand}"
						Content="{Tx:T 'toolbar.app.lib folder', Default='Lib folder'}" IconSource="/Images/lib_folder.png"
						ExtendedToolTipText="{Tx:T 'toolbar.app.lib folder.tooltip'}"
						ToolTipService.ShowOnDisabled="True"
						Style="{StaticResource ToolButtonStyle}" Focusable="False" CollapsePriority="100"/>
				</StackPanel>
				<TextBlock
                    Visibility="Collapsed"
					Grid.Row="3" Grid.Column="13" Grid.ColumnSpan="1" HorizontalAlignment="Center"
					Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Margin="0,4,0,0"
					Text="{Tx:T 'toolbar.app', Default='Application'}"/>

				<ContentControl Grid.Row="0" Grid.Column="14" Grid.RowSpan="5" Template="{StaticResource ToolGridLargeSeparator}" Focusable="False"/>
			</Grid>
		</Grid>
		<!-- endregion ToolGrid -->

		<!-- region Character map -->
		<Grid
			DockPanel.Dock="Top"
			Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
			Visibility="{Binding Settings.View.ShowCharacterMap, Converter={StaticResource boolVisConverter}}">
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="Auto"/>
			</Grid.RowDefinitions>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="*"/>
			</Grid.ColumnDefinitions>

			<TextBlock
				Grid.Column="0"
				VerticalAlignment="Center" Margin="5,0,1,0"
				Text="{Tx:T 'toolbar.view.character map', Default='Character map'}"
				Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>

			<ItemsControl Grid.Column="1" Margin="5,1" ItemsSource="{Binding Settings.Input.CharacterMap, Converter={StaticResource characterMapConverter}}">
				<ItemsControl.ItemsPanel>
					<ItemsPanelTemplate>
						<WrapPanel Orientation="Horizontal"/>
					</ItemsPanelTemplate>
				</ItemsControl.ItemsPanel>
				<ItemsControl.ItemTemplate>
					<DataTemplate>
						<Button
							MinWidth="20"
							FontFamily="{Binding DataContext.Settings.View.MonospaceFont, ElementName=_this, Converter={StaticResource monospaceFontConverter}}"
							FontSize="{Binding DataContext.FontSize, ElementName=_this}"
							TextOptions.TextFormattingMode="{Binding DataContext.TextFormattingMode, ElementName=_this}"
							Content="{Binding}"
							Click="CharmapButton_Click"
							Style="{StaticResource LightButtonStyle}" Focusable="False"
							ToolTipOpening="CharMapButton_ToolTipOpening">
							<Button.ToolTip>
								<StackPanel>
									<TextBlock Text="{Binding Mode=OneWay, Converter={StaticResource unicodeInfoConverter}}"/>
									<TextBlock Text="{Binding Mode=OneWay}" FontSize="64" HorizontalAlignment="Left" Background="#10000000" TextOptions.TextFormattingMode="Ideal"/>
								</StackPanel>
							</Button.ToolTip>
						</Button>
					</DataTemplate>
				</ItemsControl.ItemTemplate>
			</ItemsControl>

			<Border
				Grid.Row="1" Grid.ColumnSpan="2"
				BorderThickness="0,0,0,1" BorderBrush="#20000000"/>
		</Grid>
		<!-- endregion Character map -->

		<!-- region Status bar -->
		<Grid DockPanel.Dock="Bottom" Style="{StaticResource StatusGridStyle}" UseLayoutRounding="True">
			<Grid.RowDefinitions>
				<RowDefinition Height="1"/>
				<RowDefinition Height="Auto"/>
			</Grid.RowDefinitions>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="3"/>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="3"/>
			</Grid.ColumnDefinitions>

			<Rectangle Grid.Row="0" Grid.ColumnSpan="16" Fill="{StaticResource StatusGridShadowBrush}"/>

			<TextBlock Name="StatusText" Grid.Row="1" Grid.Column="1" Margin="3,2">
				<TextBlock.RenderTransform>
					<TranslateTransform x:Name="StatusTextTranslateTransform" Y="0"/>
				</TextBlock.RenderTransform>
			</TextBlock>
			<TextBlock Name="StatusTextShadow" Grid.Row="1" Grid.Column="1" Margin="3,2" Opacity="0">
				<TextBlock.RenderTransform>
					<TranslateTransform x:Name="StatusTextShadowTranslateTransform" Y="0"/>
				</TextBlock.RenderTransform>
			</TextBlock>

			<ContentControl Grid.Row="1" Grid.Column="2" Template="{StaticResource StatusGridLargeSeparator}" Focusable="False"/>

			<StackPanel Grid.Row="1" Grid.Column="3" Margin="3,2" Orientation="Horizontal">
				<TextBlock Margin="0,0,6,0" Text="{Binding CursorCharCodePoint}" Visibility="{Binding CursorCharVisibility}"/>
				<TextBlock Margin="0,0,6,0" Text="{Binding CursorCharName}" Visibility="{Binding CursorCharVisibility}"/>
				<TextBlock Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Text="{Binding CursorCharCategory}"/>
			</StackPanel>

			<ContentControl Grid.Row="1" Grid.Column="4" Template="{StaticResource StatusGridLargeSeparator}" Focusable="False"/>

			<StackPanel Grid.Row="1" Grid.Column="5" Orientation="Horizontal">
				<TextBlock Margin="3,2" Text="{Tx:T 'statusbar.text size', Default='Text size'}"/>
				<Slider
					Width="150" Margin="3,2"
					Minimum="100" Maximum="200" IsSnapToTickEnabled="True" TickFrequency="10"
					Value="{Binding FontScale}">
					<Slider.LayoutTransform>
						<ScaleTransform ScaleX="0.7" ScaleY="0.7"/>
					</Slider.LayoutTransform>
				</Slider>
			</StackPanel>
		</Grid>
		<!-- endregion Status bar -->

		<!-- region Content area -->
		<Grid>
			<Grid.RowDefinitions>
				<RowDefinition Height="*"/>
			</Grid.RowDefinitions>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="1*"/>
				<ColumnDefinition Width="6"/>
				<ColumnDefinition Width="2*"/>
			</Grid.ColumnDefinitions>

			<!-- region Tree view -->
			<Controls:MultiSelectTreeView
				Name="TextKeysTreeView"
				Grid.Row="0" Grid.Column="0"
				ItemsSource="{Binding RootTextKey.VisibleChildren}"
				BorderThickness="0"
				UseLayoutRounding="False"
				SelectionChanged="TextKeysTreeView_SelectionChanged"
				ContextMenuOpening="TextKeysTreeView_ContextMenuOpening"
				KeyDown="TextKeysTreeView_KeyDown">
				<!--PreviewSelectionChanged="TextKeysTreeView_PreviewSelectionChanged"
				ContextMenuOpening="TextKeysTreeView_ContextMenuOpening"-->

				<Controls:MultiSelectTreeView.InputBindings>
					<KeyBinding Key="C" Modifiers="Control" Command="{Binding CopyTextKeyCommand}"/>
				</Controls:MultiSelectTreeView.InputBindings>

				<Controls:MultiSelectTreeView.ContextMenu>
					<ContextMenu DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
						<MenuItem Header="{Tx:T 'toolbar.text key.new'}" Command="{Binding NewTextKeyCommand}" Icon="{ui:MenuIcon /Images/key_create.png}"/>
						<MenuItem Header="{Tx:T 'toolbar.text key.delete'}" Command="{Binding DeleteTextKeyCommand}" Icon="{ui:MenuIcon /Images/key_delete.png}"/>
						<MenuItem Header="{Tx:T 'toolbar.text key.rename'}" Command="{Binding RenameTextKeyCommand}" Icon="{ui:MenuIcon /Images/rename.png}"/>
						<MenuItem Header="{Tx:T 'toolbar.text key.duplicate'}" Command="{Binding DuplicateTextKeyCommand}" Icon="{ui:MenuIcon /Images/key_duplicate.png}"/>
						<MenuItem Header="{Tx:T 'menu.text key.copy'}" Command="{Binding CopyTextKeyCommand}"/>
						<Separator/>
						<MenuItem Header="{Tx:T 'contextmenu.text key.convert to namespace'}" Command="{Binding ConvertToNamespaceCommand}" Icon="{ui:MenuIcon /Images/textkey_namespace.png}"/>
						<MenuItem Header="{Tx:T 'contextmenu.text key.convert to text key'}" Command="{Binding ConvertToTextKeyCommand}" Icon="{ui:MenuIcon /Images/key.png}"/>
					</ContextMenu>
				</Controls:MultiSelectTreeView.ContextMenu>

				<Controls:MultiSelectTreeView.ItemContainerStyle>
					<Style TargetType="{x:Type Controls:MultiSelectTreeViewItem}">
						<Setter Property="DisplayName" Value="{Binding DisplayName, Mode=TwoWay}"/>
						<Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
						<Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
						<!--Setter Property="IsVisible" Value="{Binding IsVisible, Mode=TwoWay}" /-->
						<Setter Property="IsEnabled" Value="{Binding IsEnabled, Mode=TwoWay}"/>
						<Setter Property="Remarks" Value="{Binding Remarks, Mode=TwoWay}"/>

						<Setter Property="RemarksTemplate">
							<Setter.Value>
								<DataTemplate>
									<TextBlock VerticalAlignment="Center" Margin="3,0,0,0" Foreground="#e56e5b" FontStyle="Italic" Text="{Binding}">
										<TextBlock.Style>
											<Style TargetType="TextBlock">
												<Style.Triggers>
													<DataTrigger Binding="{Binding}" Value="{x:Null}">
														<Setter Property="Visibility" Value="Collapsed"/>
													</DataTrigger>
													<DataTrigger Binding="{Binding}" Value="">
														<Setter Property="Visibility" Value="Collapsed"/>
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</TextBlock.Style>
									</TextBlock>
								</DataTemplate>
							</Setter.Value>
						</Setter>
					</Style>
				</Controls:MultiSelectTreeView.ItemContainerStyle>

				<Controls:MultiSelectTreeView.Resources>
					<HierarchicalDataTemplate DataType="{x:Type vm:TextKeyViewModel}" ItemsSource="{Binding VisibleChildren}">
						<StackPanel Orientation="Horizontal">
							<Image Name="icon" Width="16" Height="16" Margin="0,0,2,0" Source="{Binding ImageSource}"/>
							<ContentControl Margin="0,0,2,0" Focusable="False">
								<ContentControl.Content>
									<MultiBinding Converter="{StaticResource textHighlightConverter}">
										<MultiBinding.Bindings>
											<Binding Path="DisplayName" Mode="OneWay"/>
											<Binding Path="Text" ElementName="SearchText" Mode="OneWay"/>
										</MultiBinding.Bindings>
									</MultiBinding>
								</ContentControl.Content>
							</ContentControl>
						</StackPanel>
					</HierarchicalDataTemplate>
				</Controls:MultiSelectTreeView.Resources>
			</Controls:MultiSelectTreeView>
			<!-- endregion Tree view -->

			<GridSplitter Grid.Column="1" HorizontalAlignment="Stretch" TabIndex="9991"/>
			<Path Grid.Column="1" Grid.RowSpan="2" HorizontalAlignment="Center" VerticalAlignment="Center" IsHitTestVisible="False"
				Fill="#50000000" Data="M0,0 H2 V2 H0z M0,4 H2 V6 H0z M0,8 H2 V10 H0z M0,12 H2 V14 H0z M0,16 H2 V18 H0z"/>

			<!-- region ContentLayoutGrid -->
			<Grid Name="ContentLayoutGrid" Grid.Column="2">
				<Grid.RowDefinitions>
					<RowDefinition Height="*" MinHeight="120"/>
					<RowDefinition Height="{Binding SuggestionsSplitterHeight, FallbackValue=6, Mode=TwoWay, Converter={StaticResource doubleGridLengthConverter}}"/>
					<RowDefinition Height="{Binding SuggestionsPanelHeight, FallbackValue=40, Mode=TwoWay, Converter={StaticResource doubleGridLengthConverter}}"/>
				</Grid.RowDefinitions>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*" MinWidth="250"/>
					<ColumnDefinition Width="{Binding SuggestionsSplitterWidth, FallbackValue=6, Mode=TwoWay, Converter={StaticResource doubleGridLengthConverter}}"/>
					<ColumnDefinition Width="{Binding SuggestionsPanelWidth, FallbackValue=100, Mode=TwoWay, Converter={StaticResource doubleGridLengthConverter}}"/>
				</Grid.ColumnDefinitions>

				<ContentControl Focusable="False">
					<ContentControl.Content>
						<MultiBinding Converter="{StaticResource treeNodesConverter}">
							<!-- The list to observe must be the very first binding (index 0) for the converter to work -->
							<Binding Path="SelectedItems" ElementName="TextKeysTreeView" Mode="OneWay"/>
							<Binding Path="SelectedItems.Count" ElementName="TextKeysTreeView" Mode="OneWay"/>
							<Binding Path="Items.Count" ElementName="TextKeysTreeView" Mode="OneWay"/>
							<Binding Path="SelectionDummy" Mode="OneWay"/>
						</MultiBinding>
					</ContentControl.Content>

					<ContentControl.Resources>
						<DataTemplate DataType="{x:Type vm:DetailsMessageViewModel}">
							<v:DetailsMessage/>
						</DataTemplate>

						<DataTemplate DataType="{x:Type vm:TextKeyViewModel}">
							<v:TextKeyView/>
						</DataTemplate>
					</ContentControl.Resources>
				</ContentControl>

				<GridSplitter
					HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
					TabIndex="9992">
					<GridSplitter.Style>
						<Style TargetType="GridSplitter">
							<Setter Property="Grid.Row" Value="0"/>
							<Setter Property="Grid.Column" Value="1"/>
							<Style.Triggers>
								<DataTrigger Binding="{Binding Settings.View.SuggestionsHorizontalLayout}" Value="False">
									<Setter Property="Grid.Row" Value="1"/>
									<Setter Property="Grid.Column" Value="0"/>
								</DataTrigger>
								<DataTrigger Binding="{Binding Settings.View.ShowSuggestions}" Value="False">
									<Setter Property="Visibility" Value="Collapsed"/>
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</GridSplitter.Style>
				</GridSplitter>
				<Path
					Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" IsHitTestVisible="False"
					Fill="#50000000" Data="M0,0 H2 V2 H0z M0,4 H2 V6 H0z M0,8 H2 V10 H0z M0,12 H2 V14 H0z M0,16 H2 V18 H0z"/>
				<Path
					Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center" IsHitTestVisible="False"
					Fill="#50000000" Data="M0,0 H2 V2 H0z M4,0 H6 V2 H4z M8,0 H10 V2 H8z M12,0 H14 V2 H12z M16,0 H18 V2 H16z"/>

				<Grid>
					<Grid.Style>
						<Style TargetType="Grid">
							<Setter Property="Grid.Row" Value="0"/>
							<Setter Property="Grid.Column" Value="2"/>
							<Style.Triggers>
								<DataTrigger Binding="{Binding Settings.View.SuggestionsHorizontalLayout}" Value="False">
									<Setter Property="Grid.Row" Value="2"/>
									<Setter Property="Grid.Column" Value="0"/>
								</DataTrigger>
								<DataTrigger Binding="{Binding Settings.View.ShowSuggestions}" Value="False">
									<Setter Property="Visibility" Value="Collapsed"/>
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</Grid.Style>
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="*"/>
					</Grid.RowDefinitions>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*"/>
					</Grid.ColumnDefinitions>

					<TextBlock FontSize="16" Margin="12,10,12,12" Text="{Binding SuggestionsCultureCaption, Mode=OneWay}"/>

					<ScrollViewer Grid.Row="1" Focusable="False">
						<ItemsControl ItemsSource="{Binding Suggestions}">
							<ItemsControl.ItemTemplate>
								<DataTemplate>
									<StackPanel Margin="12,0,12,8">
										<TextBlock TextWrapping="Wrap" ToolTip="{Binding Score}">
											<Run Text="{Binding BaseText}" FontWeight="{Binding BaseWeight}"/>
											<Run Text=" "/>
											<Run Text="{Binding TextKey}" Foreground="#80000000"/>
											<TextBlock.Style>
												<Style TargetType="TextBlock">
													<Style.Triggers>
														<DataTrigger Binding="{Binding IsDummy}" Value="True">
															<Setter Property="FontStyle" Value="Italic"/>
															<Setter Property="Opacity" Value="0.4"/>
														</DataTrigger>
													</Style.Triggers>
												</Style>
											</TextBlock.Style>
										</TextBlock>
										<TextBlock Margin="12,4,0,0" Text="{Binding TranslatedText}" TextWrapping="Wrap" Foreground="#3560df">
											<TextBlock.Style>
												<Style TargetType="TextBlock">
													<Setter Property="Visibility" Value="Visible"/>
													<Style.Triggers>
														<DataTrigger Binding="{Binding TranslatedText}" Value="{x:Null}">
															<Setter Property="Visibility" Value="Collapsed"/>
														</DataTrigger>
													</Style.Triggers>
												</Style>
											</TextBlock.Style>
										</TextBlock>
									</StackPanel>
								</DataTemplate>
							</ItemsControl.ItemTemplate>
						</ItemsControl>
					</ScrollViewer>
				</Grid>
			</Grid>
			<!-- endregion ContentLayoutGrid -->
		</Grid>
		<!-- endregion Content area -->
	</DockPanel>
</Window>
